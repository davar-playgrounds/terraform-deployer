variables:
    # When using dind, it's wise to use the overlayfs driver for
    # improved performance.
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375/
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
    DOCKER_HOST: tcp://docker:2375
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CREDS: "gitlab-ci-token:${CI_JOB_TOKEN}"

services:
  - docker:dind

stages:
  - unit-test
  - integration-test
  - build
  - tag

.before_script: &before_script |
    docker info
    docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.build_script: &build_script |
    docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    docker build -t $IMAGE_TAG -f src/deployer/Dockerfile .
    docker push $IMAGE_TAG

auto_tag_repo:
  image: daypatrickb/gitlab-repo-tagger:latest
  stage: tag
  only:
    - master
  script:
    - tag-repo

unit_tests:
  stage: unit-test
  image: python:3-slim
  when: always
  except:
    - tags
  script:
    - apt-get update
    - apt-get install -y make
    - cd  ${CI_PROJECT_DIR}
    - make CONFIG=~/.aws/config config
    - make install
    - make lint
    - make test
    - make testall
    - deployer --help
    - gen_config --help

######################################################################
# Really need to come up with some better integration tests which don't
# require access to AWS or an actual AWS account config
##
integration_tests:
  stage: integration-test
  image: python:3-slim
  when: always
  except:
    - tags
  script:
    - echo "need to come up with some better integration tests"
#     - apt-get update
#     - apt-get install -y make git
#     - cd  ${CI_PROJECT_DIR}
#     - make CONFIG=~/.aws/config config
#     - make install
#     - deployer --help
#     - gen_config --help
#     - CORE_INFRA=/builds/core-infrastructure
#     - git clone https://${CREDS}@gitlab.com/seek-and-deploy/core-infrastructure.git $CORE_INFRA
#     - ls -lrt $CORE_INFRA
#     - ls -lrt $CORE_INFRA/config
#     - bin/gen_config -c $CORE_INFRA/config/core_template.json -o /tmp/core-tf-test.json
#      - bin/deployer plan -v /tmp/core-tf-test.json --debug 
    
build_container_dev:
  stage: build
  image: docker:18-dind
  dependencies:
    - unit_tests
    - integration_tests
  when: on_success
  except:
    - tags
    - master
  before_script:
    - *before_script
  script:
    - *build_script

build_container_prod:
  stage: build
  image: docker:18-dind
  dependencies:
    - unit_tests
    - integration_tests
  when: on_success
  only:
    - tags
  before_script:
    - *before_script
  script:
    - *build_script
    - CI_REGISTRY="docker.io"
    - CI_REGISTRY_USER=$DOCKER_USER
    - CI_REGISTRY_PASSWORD=$DOCKER_PASSWORD
    - CI_REGISTRY=docker.io
    - CI_REGISTRY_IMAGE=docker.io/pllsaph/seek-and-deploy
    - export CI_REGISTRY CI_REGISTRY_USER CI_REGISTRY_PASSWORD CI_REGISTRY CI_REGISTRY_IMAGE
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info
    - docker tag $IMAGE_TAG pllsaph/seek-and-deploy:latest
    - docker tag $IMAGE_TAG pllsaph/seek-and-deploy:$CI_COMMIT_REF_SLUG
    - docker push pllsaph/seek-and-deploy:latest
    - docker push pllsaph/seek-and-deploy:$CI_COMMIT_REF_SLUG    

